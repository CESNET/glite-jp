<?xml version="1.0"?>

<service name="JobProvenanceTypes"
	ns="http://glite.org/wsdl/services/jp"
	typePrefix="jpt">

	<version>CVS revision: <![CDATA[ $Header$ ]]></version>

	<types ns="http://glite.org/wsdl/types/jp">

		<enum name="queryOp">
			Operators used in queries. Most are self-explanatory.
			<val name="EQUAL"></val>
			<val name="UNEQUAL"></val>
			<val name="LESS"></val>
			<val name="GREATER"></val>
			<val name="WITHIN">The attribute is between two specified values.</val>
			<val name="EXISTS">The attribute exists (even having a NULL value).</val>
		</enum>

		<struct name="tagValue">
			A single user-recorded value for a job attribute.
			<elem name="name" type="xsd:string">Name of the attribute, including namespace.</elem>
			<elem name="value" type="stringOrBlob" optional="yes">Value.</elem>
		</struct>
	
		<struct name="genericFault" fault="yes">
			<elem name="source" type="xsd:string"></elem>
			<elem name="code" type="xsd:int"></elem>
			<elem name="text" type="xsd:string"></elem>
			<elem name="description" type="xsd:string" optional="yes"></elem>
			<elem name="reason" type="genericFault" optional="yes"></elem>
		</struct>
	
		<struct name="primaryQuery">
			A single condition on job.
			<elem name="attr" type="xsd:string">Attribute name to query.</elem>
			<elem name="op" type="queryOp">Operation.</elem>
			<elem name="origin" type="attrOrig" optional="yes">Where the attribute value came from.</elem>
			<elem name="value" type="stringOrBlob">Value to compare the job attribute with.</elem>
			<elem name="value2" type="stringOrBlob" optional="yes">Another value (for op = WITHIN).</elem>
		</struct>

		<struct name="feedSession">
			One session between IS and PS (aka feed) charactetristics.
			<elem name="primaryServer" type="xsd:string">URL of primary server.</elem>
			<elem name="condition" type="primaryQuery" list="yes">Filter conditions.</elem>
			<elem name="history" type="xsd:int">Query type.</elem>
			<elem name="continuous" type="xsd:int">Query type</elem>
			<elem name="feedId" type="xsd:string" optional="yes">Unique ID of the feed session.</elem>
		</struct>

		<struct name="jppsFile">
			JP primary storage file identification.
			<elem name="class" type="xsd:string">Type of the file (as set on StartUpload).</elem>
			<elem name="name" type="xsd:string">Name of the file (if there are more of the same type per job).</elem>
			<elem name="url" type="xsd:string">Where the file is stored on JP primary storage.</elem>
		</struct>

		<struct name="attrValue">
			Single value of an attribute.
			<elem name="name" type="xsd:string">Name of the attribute, including namespace.</elem>
			<elem name="value" type="stringOrBlob" optional="yes">String value.</elem>
			<elem name="timestamp" type="xsd:dateTime">When this value was recorded.</elem>
			<elem name="origin" type="attrOrig">Where this value came from.</elem>
			<elem name="originDetail" type="xsd:string" optional="yes"></elem>
		</struct>

		<choice name="stringOrBlob">
			<elem name="string" type="xsd:string">String value.</elem>
			<elem name="blob" type="xsd:base64Binary">Binary value.</elem>
		</choice>

		<enum name="attrOrig">
			Specification of attribute origin.
			<val name="SYSTEM">JP system value, e.g. job owner.</val>
			<val name="USER">Explicitely stored by the user via RecordTag operation.</val>
			<val name="FILE">Coming from uploaded file.</val>
		</enum>

		<struct name="jobRecord">
			Information on a single job.
			Used for both feeding JP index server from primary storage
			and to answer user queries on index server.
			<elem name="jobid" type="xsd:string">ID of the job.</elem>
			<elem name="attributes" type="attrValue" optional="yes" list="yes">
				Attribute values, required by query/feed and available right now.
			</elem>
			<elem name="primaryStorage" type="xsd:string" list="yes" optional="yes">
				User query only: which primary storage(s) have data on this job.
			</elem>
			<elem name="remove" type="xsd:boolean" optional="yes">
				UpdateJobs only: this job no longer belongs to the feed.
				Attribute values are those which caused the change.
			</elem>
		</struct>

		<struct name="indexQuery">
			Single query condition on a job.
			Similarly to LB, these outer conditions are logically ANDed.
			<elem name="attr" type="xsd:string">
				Which attribute the condition refers to.
			</elem>
			<elem name="origin" optional="yes" type="attrOrig">
				Specific attribute origin (if we do care).
			</elem>
			<elem name="record" list="yes" type="indexQueryRecord">
				List of conditions on attribute attr.
				These conditions are logically ORed.
			</elem>
		</struct>

		<struct name="indexQueryRecord">
			Single condition on an attribute.
			<elem name="op" type="queryOp">Query operation.</elem>
			<elem name="value" type="stringOrBlob">Value to compare attribute with.</elem>
		</struct>
	
		<list name="string"/>
	</types>

</service>

