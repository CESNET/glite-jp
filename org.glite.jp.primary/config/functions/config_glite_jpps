function config_glite_jpps_check(){
  requires MYSQL_PASSWORD
}

function config_glite_jpps_setenv(){

  yaimgridenv_set GLITE_LOCATION ${INSTALL_ROOT:-opt}/glite
  yaimgridenv_set GLITE_LOCATION_VAR ${GLITE_LOCATION_VAR:-/var/glite}
  yaimgridenv_set GLOBUS_LOCATION ${GLOBUS_LOCATION:-/opt/globus}
  yaimgridenv_set CARES_LOCATION ${CARES_LOCATION:-/opt/c-ares}
  yaimgridenv_set GLITE_USER ${GLITE_USER:-glite}
  yaimgridenv_set GLITE_HOST_CERT ${GLITE_USER_HOME:-/home/glite}/.certs/hostcert.pem
  yaimgridenv_set GLITE_HOST_KEY ${GLITE_USER_HOME:-/home/glite}/.certs/hostkey.pem
  yaimgridenv_set X509_CERT_DIR /etc/grid-security/certificates
  yaimgridenv_set GLITE_JP_PRIMARY_PORT ${GLITE_JP_PRIMARY_PORT:-8901}
  yaimgridenv_set GLITE_JP_PRIMARY_PEERS ${GLITE_JP_PRIMARY_PEERS:-$GLITE_LOCATION/etc/JPPS-peers}
  yaimgridenv_set GLITE_JP_PRIMARY_FTP_PORT ${GLITE_JP_PRIMARY_FTP_PORT:-8911}
  yaimgridenv_set GLITE_JP_PRIMARY_INTERNAL ${GLITE_USER_HOME:-/home/glite}/jpps
  yaimgridenv_set GLITE_JP_PRIMARY_EXTERNAL gsiftp://`hostname -f`:${GLITE_JP_PRIMARY_FTP_PORT:-8911}${GLITE_USER_HOME:-/home/glite}/jpps
   yaimgridenv_set GLITE_JP_PRIMARY_DBCS ${GLITE_JP_PRIMARY_DBCS:-jpps/@localhost:jpps}
  yaimgridenv_set GLITE_JP_PRIMARY_SPECIAL ${GLITE_JP_PRIMARY_SPECIAL:-}
  yaimgridenv_set GLITE_JP_GSI_AUTHZ ${GLITE_JP_GSI_AUTHZ:-$GLITE_LOCATION/etc/gsi_authz.conf}

  yaimgridpath_append LD_LIBRARY_PATH ${INSTALL_ROOT:-opt}/glite/lib  
  yaimgridpath_append LD_LIBRARY_PATH ${INSTALL_ROOT:-opt}/globus/lib  
  yaimgridpath_append LD_LIBRARY_PATH ${INSTALL_ROOT:-opt}/c-ares/lib
}

function config_glite_jpps() {

  ####################################################
  #   Job Provenance Primary Storage configuration   #
  ####################################################
	
  HOSTNAME=`hostname -f`

  chmod og+rx /var/lib/mysql/ 
  chown mysql:mysql /var/run/mysqld/

  # add option  --max_allowed_packet=17M
  if [ ! -f /etc/my.cnf ]; then
    echo "[mysqld]" >> /etc/my.cnf
    echo "max_allowed_packet=17M" >> /etc/my.cnf
  else
    grep "^[mysqld]" /etc/my.cnf > /dev/null
    if [ ! $? = 0 ]; then
      echo "[mysqld]" >> /etc/my.cnf
      echo "max_allowed_packet=17M" >> /etc/my.cnf
    fi
  fi

  /sbin/chkconfig mysqld on
  ps ax | grep -v grep |grep mysqld_safe > /dev/null 2>&1
  if [ ! $? = 0 ] ; then
    /etc/init.d/mysqld start
    sleep 1
  fi 

  ls /tmp/mysql.sock > /dev/null 2>&1
  if [ ! $? = 0 ]; then
    ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock
  fi
  
  # set mysql password
  set_mysql_passwd || return 1 # the function uses $MYSQL_PASSWORD

  # Check if database exist
  mysqlshow --password="$MYSQL_PASSWORD" | grep "jpps" > /dev/null 2>&1

  if [ ! $? = 0 ]; then
    mysql -u root --password="$MYSQL_PASSWORD" -e "CREATE DATABASE jpps"
    mysql --password="$MYSQL_PASSWORD" jpps < ${INSTALL_ROOT}/glite/etc/glite-jp-primary-dbsetup.sql
    mysql -u root --password="$MYSQL_PASSWORD" -e "GRANT ALL PRIVILEGES on jpps.* to jpps IDENTIFIED BY '' WITH GRANT OPTION;"
    mysql -u root --password="$MYSQL_PASSWORD" -e "GRANT ALL PRIVILEGES on jpps.* to jpps@'$HOSTNAME' IDENTIFIED BY '' WITH GRANT OPTION;"
    mysql -u root --password="$MYSQL_PASSWORD" -e "GRANT ALL PRIVILEGES on jpps.* to jpps@localhost IDENTIFIED BY '' WITH GRANT OPTION;"
  else
    yaimlog "Database jpps already exists"
  fi

  . /opt/glite/etc/profile.d/grid-env.sh
  mkdir -p $GLITE_LOCATION_VAR   # Needed to store PID of JPPS 
  chown $GLITE_USER:$GLITE_USER $GLITE_LOCATION_VAR
  chmod 0755 $GLITE_LOCATION_VAR

  mkdir -p $GLITE_JP_PRIMARY_INTERNAL
  chown $GLITE_USER:$GLITE_USER $GLITE_JP_PRIMARY_INTERNAL
  chmod 0755 $GLITE_JP_PRIMARY_INTERNAL

  mkdir -p $GLITE_USER_HOME/.certs
  chown $GLITE_USER:$GLITE_USER $GLITE_USER_HOME/.certs
  chmod 0755 $GLITE_USER_HOME/.certs
  cp -f /etc/grid-security/hostcert.pem /etc/grid-security/hostkey.pem $GLITE_USER_HOME/.certs/
  if [ ! $? = 0 ] ; then
    echo "Please copy host certificate and key into /etc/grid-security and"
    echo "  $GLITE_USER_HOME/.certs/, change the owner of the ones in"
    echo "  $GLITE_USER_HOME/.certs/ to $GLITE_USER"
  fi
  chown $GLITE_USER:$GLITE_USER $GLITE_USER_HOME/.certs/hostcert.pem $GLITE_USER_HOME/.certs/hostkey.pem
  chmod 0644 $GLITE_USER_HOME/.certs/hostcert.pem
  chmod 0400 $GLITE_USER_HOME/.certs/hostkey.pem

  # Start services
  if [ ! -f ${GLITE_LOCATION}/etc/gLiteservices ] ; then
    touch ${GLITE_LOCATION}/etc/gLiteservices
  fi

  grep glite-jp-primary ${GLITE_LOCATION}/etc/gLiteservices > /dev/null
  if [ ! $? = 0 ] ; then
    echo "${GLITE_LOCATION}/etc/init.d/glite-jp-primary" >> ${GLITE_LOCATION}/etc/gLiteservices
  fi

  touch ${GLITE_JP_PRIMARY_PEERS}

  ${GLITE_LOCATION}/etc/init.d/glite-jp-primary stop
  ${GLITE_LOCATION}/etc/init.d/glite-jp-primary start

  if [ ! $? = 0 ] ; then
    yaimlog ABORT "Service glite-jp-primary failed to start!"
    return 1
  fi

  return 0

}
