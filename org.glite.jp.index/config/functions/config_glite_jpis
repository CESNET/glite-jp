##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# NAME :        config_jpis
#
# DESCRIPTION : This function configures Job Provenance Index Server.
#
# AUTHORS :     LB/JP team, heavily based on glite-yaim-lb
#
# NOTES :
#
# YAIM MODULE:  glite-yaim-jpis
#
##############################################################################


function config_glite_jpis_check(){
  requires MYSQL_PASSWORD
}

function config_glite_jpis_setenv(){

  yaimgridenv_set GLITE_LOCATION ${INSTALL_ROOT:-opt}/glite
  yaimgridenv_set GLITE_LOCATION_VAR ${GLITE_LOCATION_VAR:-/var/glite}
  yaimgridenv_set GLITE_USER ${GLITE_USER:-glite}
  yaimgridenv_set GLITE_HOST_CERT ${GLITE_USER_HOME:-/home/glite}/.certs/hostcert.pem
  yaimgridenv_set GLITE_HOST_KEY ${GLITE_USER_HOME:-/home/glite}/.certs/hostkey.pem
  yaimgridenv_set X509_CERT_DIR /etc/grid-security/certificates
  yaimgridenv_set GLITE_JPIS_PIDFILE ${GLITE_JPIS_PIDFILE:-$GLITE_LOCATION_VAR/glite-jp-indexd.pid}
  yaimgridenv_set GLITE_JPIS_LOGFILE ${GLITE_JPIS_LOGFILE:-$GLITE_LOCATION_VAR/glite-jp-indexd.log}
  yaimgridenv_set GLITE_JPIS_CONFIG ${GLITE_JPIS_CONFIG:-$GLITE_LOCATION/etc/glite-jpis-config.xml}
  yaimgridenv_set GLITE_JPIS_PORT ${GLITE_JPIS_PORT:-8902}
  yaimgridenv_set GLITE_JPIS_DB ${GLITE_JPIS_DB:-jpis/@localhost:jpis}
  yaimgridenv_set GLITE_JPIS_QT ${GLITE_JPIS_QT:-both}
  yaimgridenv_set GLITE_JPIS_AUTH ${GLITE_JPIS_AUTH}
  yaimgridenv_set GLITE_JPIS_DEBUG ${GLITE_JPIS_DEBUG}

  yaimgridpath_append LD_LIBRARY_PATH ${INSTALL_ROOT:-opt}/glite/lib  
  yaimgridpath_append LD_LIBRARY_PATH ${INSTALL_ROOT:-opt}/globus/lib  
  yaimgridpath_append LD_LIBRARY_PATH ${INSTALL_ROOT:-opt}/c-ares/lib
}

function config_glite_jpis() {

  #################################################
  #   Job Provenance Index Server configuration   #
  #################################################
	
  HOSTNAME=`hostname -f`

  chmod og+rx /var/lib/mysql/ 
  chown mysql:mysql /var/run/mysqld/

  # add option  --max_allowed_packet=17M
  if [ ! -f /etc/my.cnf ]; then
    echo "[mysqld]" >> /etc/my.cnf
    echo "max_allowed_packet=17M" >> /etc/my.cnf
  else
    grep "^[mysqld]" /etc/my.cnf > /dev/null
    if [ ! $? = 0 ]; then
      echo "[mysqld]" >> /etc/my.cnf
      echo "max_allowed_packet=17M" >> /etc/my.cnf
    fi
  fi

  /sbin/chkconfig mysqld on
  ps ax | grep -v grep |grep mysqld_safe > /dev/null 2>&1
  if [ ! $? = 0 ] ; then
    /etc/init.d/mysqld start
    sleep 1
  fi 

  ls /tmp/mysql.sock > /dev/null 2>&1
  if [ ! $? = 0 ]; then
    ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock
  fi
  
  # set mysql password
  set_mysql_passwd || return 1 # the function uses $MYSQL_PASSWORD

  # Check if database exist
  mysqlshow --password="$MYSQL_PASSWORD" | grep "jpis" > /dev/null 2>&1

  if [ ! $? = 0 ]; then
    mysql -u root --password="$MYSQL_PASSWORD" -e "CREATE DATABASE jpis"
    mysql --password="$MYSQL_PASSWORD" jpis < ${INSTALL_ROOT}/glite/etc/glite-jp-index-dbsetup.sql
    mysql -u root --password="$MYSQL_PASSWORD" -e "GRANT ALL PRIVILEGES on jpis.* to jpis IDENTIFIED BY '' WITH GRANT OPTION;"
    mysql -u root --password="$MYSQL_PASSWORD" -e "GRANT ALL PRIVILEGES on jpis.* to jpis@'$HOSTNAME' IDENTIFIED BY '' WITH GRANT OPTION;"
    mysql -u root --password="$MYSQL_PASSWORD" -e "GRANT ALL PRIVILEGES on jpis.* to jpis@localhost IDENTIFIED BY '' WITH GRANT OPTION;"
  else
    yaimlog "Database jpis already exists"
  fi

  . /opt/glite/etc/profile.d/grid-env.sh
  mkdir -p $GLITE_LOCATION_VAR   # Needed to store PID of JP IS server 
  chown $GLITE_USER:$GLITE_USER $GLITE_LOCATION_VAR
  chmod 0755 $GLITE_LOCATION_VAR

  mkdir -p $GLITE_USER_HOME/.certs
  chown $GLITE_USER:$GLITE_USER $GLITE_USER_HOME/.certs
  chmod 0755 $GLITE_USER_HOME/.certs
  cp -f /etc/grid-security/hostcert.pem /etc/grid-security/hostkey.pem $GLITE_USER_HOME/.certs/
  if [ ! $? = 0 ] ; then
    echo "Please copy host certificate and key into /etc/grid-security and"
    echo "  $GLITE_USER_HOME/.certs/, change the owner of the ones in"
    echo "  $GLITE_USER_HOME/.certs/ to $GLITE_USER"
  fi
  chown $GLITE_USER:$GLITE_USER $GLITE_USER_HOME/.certs/hostcert.pem $GLITE_USER_HOME/.certs/hostkey.pem
  chmod 0644 $GLITE_USER_HOME/.certs/hostcert.pem
  chmod 0400 $GLITE_USER_HOME/.certs/hostkey.pem

  # Start services
  if [ ! -f ${GLITE_LOCATION}/etc/gLiteservices ] ; then
    touch ${GLITE_LOCATION}/etc/gLiteservices
  fi

  grep glite-jp-indexd ${GLITE_LOCATION}/etc/gLiteservices > /dev/null
  if [ ! $? = 0 ] ; then
    echo "${GLITE_LOCATION}/etc/init.d/glite-jp-indexd" >> ${GLITE_LOCATION}/etc/gLiteservices
  fi

  ${GLITE_LOCATION}/etc/init.d/glite-jp-indexd stop
  ${GLITE_LOCATION}/etc/init.d/glite-jp-indexd start

  if [ ! $? = 0 ] ; then
    yaimlog ABORT "Service glite-jp-indexd failed to start!"
    return 1
  fi

  return 0

}
