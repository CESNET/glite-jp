#! /bin/sh

#
# startup script for JP index server
#

GLITE_LOCATION=${GLITE_LOCATION:-/opt/glite}
GLITE_LOCATION_VAR=${GLITE_LOCATION_VAR:-${GLITE_LOCATION}/var}

[ -f /etc/glite.conf ] && . /etc/glite.conf
[ -f $GLITE_LOCATION/etc/glite-wms.conf ] && . $GLITE_LOCATION/etc/glite-wms.conf
[ -f $HOME/.glite.conf ] && . $HOME/.glite.conf

[ -f $GLITE_LOCATION/etc/jpis.conf ] && . $GLITE_LOCATION/etc/jpis.conf
[ -f $GLITE_LOCATION_VAR/etc/jpis.conf ] && . $GLITE_LOCATION_VAR/etc/jpis.conf

[ -n "$GLITE_JPIS_PIDFILE" ] || export GLITE_JPIS_PIDFILE=$GLITE_LOCATION_VAR/glite-jp-indexd.pid
[ -n "$GLITE_JPIS_LOGFILE" ] || export GLITE_JPIS_LOGFILE=$GLITE_LOCATION_VAR/log/glite-jp-indexd.log
pidfile="$GLITE_JPIS_PIDFILE"
logfile="$GLITE_JPIS_LOGFILE"

unset creds port

start()
{
	echo -n Starting glite-jp-indexd ...
	$GLITE_LOCATION/bin/glite-jp-indexd
	echo " done"
}

stop()
{
	echo -n Stopping glite-jp-indexd ...
	if [ -f $pidfile ]; then
		pid=`cat $pidfile`
		kill $pid
		echo -n Stopping glite-jp-indexd \($pid\) ...
		try=0
		while ps p $pid >/dev/null 2>&1; do 
			sleep 1;
			try=`expr $try + 1`
			if [ $try = 20 ]; then
				echo " giving up after $try retries"
				return 1
			fi
	 	done
		echo " done"
		rm -f $pidfile
	else
		echo $pidfile does not exist - glite-jp-indexd not running? >&2
		return 1
	fi
	echo done
}

status()
{
	if [ -f $pidfile ]; then
		pid=`cat $pidfile`
		if ps p $pid >/dev/null 2>&1; then
			echo glite-jp-indexd running as $pid 
			return 0
		fi
	fi

	echo glite-jp-indexd not running
	return 1
}

case x$1 in
	xstart)	start;;
	xstop)	stop;;
	xrestart) stop; start;;
	xstatus) status;;
	x*)	echo usage: $0 start,stop,restart,status >&2
		exit 1;;
esac
